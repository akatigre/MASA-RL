#!/usr/bin/env bash
NGPUS=8 # number of GPUs to use
OUTPUT_DIR="ckpt" # output directory path
MODEL_SIZE="8B" # valid model size: 1.7B, 4B, 8B, 14B
BASE_MODEL="Qwen/Qwen3-${MODEL_SIZE}-Base" # valid HF model name or your local model path
BASE_DIR=$(pwd) # current directory path

DATA_NAME="deepscaler"
train_files="${BASE_DIR}/data/${DATA_NAME}/train.parquet"
test_files="${BASE_DIR}/data/math/test.parquet"
kl_coef=0
clip_ratio_low=0.2
clip_ratio_high=0.28
lr=1e-6
MAX_RESPONSE_LENGTH=8192
MAX_PROMPT_LENGTH=2048
sp_size=2
temperature=1.0
top_p=1.0
top_k=-1
val_top_p=0.7

experiment_name=${DATA_NAME}-Qwen3-${MODEL_SIZE}-Base-GRPO-MAX-${MAX_RESPONSE_LENGTH}
python3 -m verl.trainer.main_ppo \
    algorithm.adv_estimator=grpo \
    data.train_files="${train_files}" \
    data.val_files="${test_files}" \
    data.train_batch_size=128 \
    data.max_prompt_length="${MAX_PROMPT_LENGTH}" \
    data.max_response_length="${MAX_RESPONSE_LENGTH}" \
    data.filter_overlong_prompts=True \
    data.truncation='error' \
    actor_rollout_ref.model.path="${BASE_MODEL}" \
    +actor_rollout_ref.model.override_config.attention_dropout=0 \
    +actor_rollout_ref.model.override_config.embd_pdrop=0 \
    +actor_rollout_ref.model.override_config.resid_pdrop=0 \
    actor_rollout_ref.actor.optim.lr="${lr}" \
    actor_rollout_ref.actor.optim.lr_warmup_steps=20 \
    actor_rollout_ref.actor.optim.weight_decay=0.1 \
    actor_rollout_ref.model.use_remove_padding=True \
    actor_rollout_ref.model.enable_gradient_checkpointing=True \
    actor_rollout_ref.actor.entropy_coeff=0 \
    actor_rollout_ref.actor.grad_clip=1.0 \
    actor_rollout_ref.actor.use_dynamic_bsz=True \
    actor_rollout_ref.actor.ppo_mini_batch_size=128 \
    actor_rollout_ref.actor.use_kl_loss=False \
    actor_rollout_ref.actor.kl_loss_coef="${kl_coef}" \
    actor_rollout_ref.actor.clip_ratio_low=${clip_ratio_low} \
    actor_rollout_ref.actor.clip_ratio_high=${clip_ratio_high} \
    actor_rollout_ref.actor.clip_ratio_c=10.0 \
    actor_rollout_ref.actor.strategy="fsdp2" \
    actor_rollout_ref.model.enable_activation_offload=True \
    actor_rollout_ref.actor.fsdp_config.forward_prefetch=True \
    actor_rollout_ref.actor.fsdp_config.param_offload=False \
    actor_rollout_ref.actor.fsdp_config.optimizer_offload=False \
    actor_rollout_ref.actor.fsdp_config.fsdp_size=-1 \
    actor_rollout_ref.actor.use_dynamic_bsz=True \
    actor_rollout_ref.ref.log_prob_use_dynamic_bsz=True \
    actor_rollout_ref.rollout.log_prob_use_dynamic_bsz=True \
    actor_rollout_ref.actor.ppo_max_token_len_per_gpu=36000 \
    actor_rollout_ref.ref.log_prob_max_token_len_per_gpu=96000 \
    actor_rollout_ref.rollout.log_prob_max_token_len_per_gpu=96000 \
    actor_rollout_ref.rollout.enforce_eager=True \
    actor_rollout_ref.rollout.free_cache_engine=True \
    actor_rollout_ref.rollout.tensor_model_parallel_size=2 \
    actor_rollout_ref.rollout.max_num_batched_tokens=$((MAX_PROMPT_LENGTH + MAX_RESPONSE_LENGTH)) \
    actor_rollout_ref.rollout.enable_chunked_prefill=True \
    actor_rollout_ref.rollout.temperature=${temperature} \
    actor_rollout_ref.rollout.top_p=${top_p} \
    actor_rollout_ref.rollout.top_k=${top_k} \
    actor_rollout_ref.rollout.val_kwargs.temperature=${temperature} \
    actor_rollout_ref.rollout.val_kwargs.top_p=${val_top_p} \
    actor_rollout_ref.rollout.val_kwargs.top_k=${top_k} \
    actor_rollout_ref.rollout.val_kwargs.do_sample=True \
    actor_rollout_ref.rollout.val_kwargs.n=1 \
    actor_rollout_ref.rollout.name=vllm \
    actor_rollout_ref.actor.ulysses_sequence_parallel_size=${sp_size} \
    actor_rollout_ref.ref.ulysses_sequence_parallel_size=${sp_size} \
    actor_rollout_ref.rollout.gpu_memory_utilization=0.7 \
    actor_rollout_ref.rollout.n=16 \
    actor_rollout_ref.ref.fsdp_config.param_offload=True \
    trainer.project_name=${DATA_NAME}_Qwen3-${MODEL_SIZE}-Base\
    trainer.experiment_name=${experiment_name} \
    trainer.val_before_train=True \
    trainer.default_local_dir=${OUTPUT_DIR}/${experiment_name}/checkpoints \
    trainer.critic_warmup=0 \
    trainer.logger='["console","wandb"]' \
    trainer.n_gpus_per_node="${NGPUS}" \
    trainer.nnodes=1 \
    trainer.save_freq=10 \
    trainer.test_freq=5 \
    trainer.total_epochs=1 \
    +trainer.remove_previous_ckpt_in_save=false $@